name: Build and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  test:
    name: Run Go tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Run unit tests
        run: go test ./...

  build:
    name: Build and push image
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Normalize image name
        run: echo "IMAGE_NAME=${IMAGE_NAME,,}" >> "$GITHUB_ENV"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            latest

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy to server
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check deployment secrets
        id: cfg
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        run: |
          if [ -z "$DEPLOY_HOST" ]; then
            echo "configured=false" >> "$GITHUB_OUTPUT"
          else
            echo "configured=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Skipping deploy (secrets not configured)
        if: steps.cfg.outputs.configured == 'false'
        run: echo "Deployment secrets not configured; skipping deploy job."

      - name: Normalize image name
        if: steps.cfg.outputs.configured == 'true'
        run: echo "IMAGE_NAME=${IMAGE_NAME,,}" >> "$GITHUB_ENV"

      - name: Deploy over SSH
        if: steps.cfg.outputs.configured == 'true'
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script_stop: true
          envs: IMAGE_NAME,TELEGRAM_BOT_TOKEN
          command_timeout: 15m
          script: |
            sudo docker pull ${IMAGE_NAME}:latest
            sudo docker stop pokerbot || true
            sudo docker rm pokerbot || true
            sudo docker run -d --name pokerbot \
              -e TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN} \
              --restart=always \
              ${IMAGE_NAME}:latest
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
